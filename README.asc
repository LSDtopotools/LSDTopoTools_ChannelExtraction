= Channel extraction tools

This repository contains several different methods for extracting drainage networks:
The older versions have been used in our papers (see below): we have bundled all these methods into the *channel_extraction_tool*.

. Drainage extraction from an area threshold. 
. A reproduction of the Pelletier algorithm, from  http://onlinelibrary.wiley.com/doi/10.1029/2012WR012452/full[Pelletier, WRR, 2013].
. The DrEICH algorithm, http://onlinelibrary.wiley.com/doi/10.1002/2013WR015167/full[Clubb et al., WRR, 2014]
. Geometric algorithm using Wiener filter and quantile-quantile plots to find channel heads, used by http://www.earth-surf-dynam.net/4/627/2016/[Grieve et al., ESURF, 2016]. We call this the Passacqua-Pelletier-Grieve (*PPG*) method since it combines elements of the Pelletier and http://onlinelibrary.wiley.com/doi/10.1029/2009JF001254/abstract[GeoNet] methods.

.Full instructions for the channel extraction too
************************************
You will find full instructions on installation, running and options for the channel extraction tool here:

http://lsdtopotools.github.io/LSDTT_book/#_get_the_code_for_channel_extraction
************************************


== Notes on the methods

The area threshold is a highly rudimentary method and is suggested only if your main concern is speed. The DrEICH, Pelletier and PPG methods have all been tested against field data on channel heads (see http://onlinelibrary.wiley.com/doi/10.1002/2013WR015167/full[Clubb et al., WRR, 2014]). 
The PPG method is robust against changes to grid resolution (see http://www.earth-surf-dynam.net/4/627/2016/[Grieve et al., ESURF, 2016]). 


== Quick Guide

If you are totally new to LSDTopoTools you can set up your system by following the README on our https://github.com/LSDtopotools/LSDTT_vagrantfiles[LSDTopoTools VagrantFile repository].

IMPORTANT: All but the area extraction methods use Fourier transforms, so you will need the http://www.fftw.org/[FFTW fourier transform library] installed on your system for these programs to work! 
Luckily, we have automated installation of FFTW with our https://github.com/LSDtopotools/LSDTT_vagrantfiles[vagrant files]: use one of the FFTW versions. 

If you start a vagrant virtual machine (if you don't know what that is http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_on_a_windows_machine_using_virtualbox_and_vagrant[read here]) generated by one of our FFTW vagrant files, you will *AUTOMATICALLY* have the drainage extraction source code in your directory tree. 

== Some more information on setting up LSDTopoTools

LSDTopoTools are written in pass:[C++] and work best in Linux.
We realise, however, not that many people use Linux. 
We have therefore set up something called a https://en.wikipedia.org/wiki/Virtual_machine[virtual machine] that runs a Linux operating system within whichever operating system you normally use (be it Windows, OSX, or Linux).
To do this, we use a nifty bit of software called https://www.vagrantup.com/[Vagrant] that automates the setup process. 
You can read the instructions on our http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_on_a_windows_machine_using_virtualbox_and_vagrant[documentation website], 
but basically you need to download a few bits of software that are very easy to install, download something called a https://github.com/LSDtopotools/LSDTT_vagrantfiles[vagrantfile], 
and this vagrantfile automates the construction of a working linux system that has several LSDTopoTools packages. 

Please have a look at the http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_on_a_windows_machine_using_virtualbox_and_vagrant[detailed instructions for setting up LSDTopoTools]. 

