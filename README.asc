= Channel extraction tools

This repository contains several different methods for extracting drainage networks

. Area threshold: `channel_extraction_area_threshold.cpp` and `channel_extraction_area_threshold.make`
. Pelletier algorithm (Pelletier, 2013): `channel_extraction_pelletier.cpp` and `channel_extraction_pelletier.make`
. DrEICH algorithm (Clubb et al., 2014):`channel_extraction_dreich.cpp` and `channel_extraction_dreich.make`
. Geometric algorithm using Wiener filter: `channel_extraction_wiener.cpp` and `channel_extraction_wiener.make`


== Quick Guide

If you are totally new to LSDTopoTools you can set up your system by following the README on our https://github.com/LSDtopotools/LSDTT_vagrantfiles[LSDTopoTools VagrantFile repository].


== Some more information on setting up LSDTopoTools

LSDTopoTools are written in pass:[C++] and work best in Linux.
We realise, however, not that many people use Linux. 
We have therefore set up something called a https://en.wikipedia.org/wiki/Virtual_machine[virtual machine] that runs a Linux operating system within whichever operating system you normally use (be it Windows, OSX, or Linux).
To do this, we use a nifty bit of software called https://www.vagrantup.com/[Vagrant] that automates the setup process. 
You can read the instructions on our http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_on_a_windows_machine_using_virtualbox_and_vagrant[documentation website], 
but basically you need to download a few bits of software that are very easy to install, download something called a https://github.com/LSDtopotools/LSDTT_vagrantfiles[vagrantfile], 
and this vagrantfile automates the construction of a working linux system that has several LSDTopoTools packages. 

Please have a look at the http://lsdtopotools.github.io/LSDTT_book/#_installing_lsdtopotools_on_a_windows_machine_using_virtualbox_and_vagrant[detailed instructions for setting up LSDTopoTools]. 
